@model TalmerMaint.Domain.Entities.Location
   @{ ViewBag.Title = Model.Name;
}

        <h2>

            Edit the @Model.Name <small>@Model.Subtitle</small> branch location

        </h2>
   <ol class="breadcrumb">
    <li>
        @Html.ActionLink("Locations", "Index")
    </li>
       <li>Edit Location</li>
</ol>
    <div class="row">

        <div class="col-md-7">
            @using (Html.BeginForm("Edit", "Locations"))
            {                @Html.HiddenFor(m => m.Id)


                <div class="form-inline col-sm-offset-3 col-sm-9 margin-bottom-ten">
                    <div class="checkbox" style="margin-right:20px;">@Html.CheckBox("AtmOnly") <label>Atm Only</label></div>
                    <div class="checkbox">@Html.CheckBox("NoAtm") <label>No Atm</label></div>



                </div>
                <div class="form-horizontal">
                    @foreach (var property in ViewData.ModelMetadata.Properties)

                {
                    switch (property.PropertyName)
                    {
                        
                            case "Id":
                            case "LocImage":
                            case "LocHourCats":
                            case "LocServices":
                            case "AtmOnly":
                            case "NoAtm":
                            case "LocPhoneNums":
                            case "Image":
                                break;
                            case "State":
                                <div class="form-group">
                                    <label for="@property.PropertyName" class="col-sm-3 control-label">@(property.DisplayName ?? property.PropertyName)</label>
                                    <div class="col-sm-9">
                                        @Html.DropDownListFor(x => x.State, TalmerMaint.Domain.Extensions.CentralLibrary.StatesDropdown, new { @class = "form-control" })
                                    </div>
                                </div>
                                break;
                            default:

                                <div class="form-group">
                                    <label for="@property.PropertyName" class="col-sm-3 control-label">@(property.DisplayName ?? property.PropertyName)</label>
                                    <div class="col-sm-9">
                                        @if (property.PropertyName == "Description")
                                        {
                                            @Html.TextArea(property.PropertyName, null, new { @class = "form-control ", rows = 5 })
                                        }
                                        else
                                        {
                                            @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
                                        }
                                        @Html.ValidationMessage(property.PropertyName)
                                    </div>
                                </div>
                                break;
                        }

                    }
                    
                </div>
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Cancel and return to List", "Index", null, new { @class = "btn btn-default" })
            }
        </div>
        <div class="col-md-5">
            <h3>Location Photo</h3>
            @Html.Partial("LocImageSummary", Model.LocImage)

            <h3>Hours</h3>
            @Html.Partial("LocHourSummary", Model)


            <h3>Phones</h3>
            
            @if (Model.LocPhoneNums != null)
            {

                @Html.Partial("LocPhoneNumSummary", Model)
            }

            <h3>Services</h3>
            
            @if (Model.LocServices != null)
            {

                @Html.Partial("LocServicesSummary", Model)
            }

        </div>
    </div>
@section Scripts{
    <script>
        $(document).ready(function () {
            



            if ('@Model.AtmOnly' == 'True'){
                        $('#NoAtm').attr("disabled", 'disabled');
        }
            if ('@Model.NoAtm' == 'True'){
                    $('#AtmOnly').attr("disabled", 'disabled');
        }
            $(document).on("click", "#AtmOnly", function () {
                var target = $("#NoAtm");
                if (document.getElementById('AtmOnly').checked) {

                    target.addClass("Disabled");
                    target.attr("disabled", 'disabled');
                    if ($("#NoAtm:checked").length) {
                        target.prop('checked', false);

                    }
                } else {
                    target.removeAttr('disabled');
                }
            });
            $(document).on("click", "#NoAtm", function () {
                var target = $("#AtmOnly");
                if (document.getElementById('NoAtm').checked) {

                    target.addClass("Disabled");
                    target.attr("disabled", 'disabled');
                    if ($("#AtmOnly:checked").length) {
                        target.prop('checked', false);

                    }
                } else {
                    target.removeAttr('disabled');
                }
            });

            $(":input").change(function () {
                $(".sublinks").prop('title', 'Please save your changes before leaving the page');
                $(".sublinks").tooltip();
                $('.sublinks .btn').addClass("disabled");
            });
        });
    </script>
}